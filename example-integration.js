// Example integration for audit page - showing how to use AIProgressTracker
// Add this to your audit.js page where you handle AI scanning

import AIProgressTracker from '../components/audit/AIProgressTracker';\nimport AIScanCard from '../components/audit/AIScanCard';\n\nexport default function AuditPage() {\n  const [isScanning, setIsScanning] = useState(false);\n  const [scanOptions, setScanOptions] = useState(null);\n  const [scanResult, setScanResult] = useState(null);\n  const [scanError, setScanError] = useState(null);\n\n  const handleAIScan = async (options) => {\n    setIsScanning(true);\n    setScanOptions(options);\n    setScanResult(null);\n    setScanError(null);\n\n    try {\n      // Your existing AI analysis call\n      const result = await analyzeWithAI(sourceCode, contractName, options);\n      setScanResult(result);\n    } catch (error) {\n      setScanError(error.message);\n    } finally {\n      setIsScanning(false);\n    }\n  };\n\n  const handleProgressUpdate = (modelId, status, data) => {\n    console.log(`Model ${modelId} status: ${status}`, data);\n    // You can add additional logic here if needed\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* AI Scan Card */}\n      <AIScanCard\n        isScanning={isScanning}\n        onScan={handleAIScan}\n        error={scanError}\n        result={scanResult}\n      />\n\n      {/* Progress Tracker - shows during and after scanning */}\n      {(isScanning || scanResult) && (\n        <AIProgressTracker\n          isScanning={isScanning}\n          selectedPlan={scanOptions?.plan || 'free'}\n          onProgressUpdate={handleProgressUpdate}\n        />\n      )}\n\n      {/* Your other components */}\n    </div>\n  );\n}
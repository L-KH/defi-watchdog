// NAVIGATION FIX SCRIPT\n// Add this to fix audit page navigation immediately\n\nconst fixNavigation = () => {\n  console.log('ðŸ”§ Applying navigation fix...');\n  \n  // Find all navigation links\n  const auditLinks = document.querySelectorAll('a[href=\"/audit\"], a[href=\"/audit-pro\"]');\n  \n  auditLinks.forEach((link, index) => {\n    console.log(`ðŸ”— Fixing link ${index + 1}:`, link.href);\n    \n    // Remove existing click handlers\n    const newLink = link.cloneNode(true);\n    link.parentNode.replaceChild(newLink, link);\n    \n    // Add new click handler\n    newLink.addEventListener('click', function(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      \n      const targetPath = this.getAttribute('href');\n      console.log('ðŸš€ Navigating to:', targetPath);\n      \n      // Force navigation with page reload\n      window.location.href = targetPath;\n    });\n  });\n  \n  console.log('âœ… Navigation fix applied to', auditLinks.length, 'links');\n};\n\n// Apply fix when DOM is ready\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', fixNavigation);\n} else {\n  fixNavigation();\n}\n\n// Re-apply fix after any dynamic content changes\nconst observer = new MutationObserver((mutations) => {\n  let shouldReapply = false;\n  \n  mutations.forEach((mutation) => {\n    if (mutation.type === 'childList') {\n      const addedNodes = Array.from(mutation.addedNodes);\n      const hasNavigation = addedNodes.some(node => \n        node.nodeType === 1 && \n        (node.querySelector && node.querySelector('a[href=\"/audit\"], a[href=\"/audit-pro\"]'))\n      );\n      \n      if (hasNavigation) {\n        shouldReapply = true;\n      }\n    }\n  });\n  \n  if (shouldReapply) {\n    setTimeout(fixNavigation, 100);\n  }\n});\n\n// Start observing\nif (document.body) {\n  observer.observe(document.body, {\n    childList: true,\n    subtree: true\n  });\n} else {\n  document.addEventListener('DOMContentLoaded', () => {\n    observer.observe(document.body, {\n      childList: true,\n      subtree: true\n    });\n  });\n}\n\n// Export for manual use\nwindow.fixNavigation = fixNavigation;\n\nconsole.log('ðŸ”§ Navigation fix script loaded. Use window.fixNavigation() to manually apply.');
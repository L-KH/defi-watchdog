// API Status Component
import { useState, useEffect } from 'react';

export default function APIStatusCard() {
  const [apiStatus, setApiStatus] = useState('checking');
  const [apiDetails, setApiDetails] = useState(null);

  useEffect(() => {
    checkAPIStatus();
  }, []);

  const checkAPIStatus = async () => {
    try {
      const response = await fetch('/api/test-openrouter', {
        method: 'POST',
      });
      
      const data = await response.json();
      
      if (data.success) {
        setApiStatus('working');
        setApiDetails(data);
      } else {
        setApiStatus('error');
        setApiDetails(data);
      }
    } catch (error) {
      setApiStatus('error');
      setApiDetails({ error: error.message });
    }
  };

  const getStatusColor = () => {
    switch (apiStatus) {
      case 'working': return 'green';
      case 'error': return 'red';
      default: return 'yellow';
    }
  };

  const getStatusIcon = () => {
    switch (apiStatus) {
      case 'working': return '✅';
      case 'error': return '❌';
      default: return '⏳';
    }
  };

  const getStatusMessage = () => {
    switch (apiStatus) {
      case 'working': return 'AI Analysis API is working correctly';
      case 'error': return 'AI Analysis API needs attention';
      default: return 'Checking AI Analysis API...';
    }
  };

  return (
    <div className={`p-4 rounded-lg border-2 border-${getStatusColor()}-200 bg-${getStatusColor()}-50`}>
      <div className="flex items-center justify-between mb-3">
        <div className="flex items-center">
          <span className="text-2xl mr-3">{getStatusIcon()}</span>
          <div>
            <h3 className="font-semibold text-gray-900">OpenRouter AI API Status</h3>
            <p className={`text-sm text-${getStatusColor()}-700`}>{getStatusMessage()}</p>
          </div>
        </div>
        <button
          onClick={checkAPIStatus}
          className="px-3 py-1 text-sm bg-gray-100 hover:bg-gray-200 rounded border"
        >
          🔄 Check Again
        </button>
      </div>

      {apiStatus === 'error' && apiDetails && (
        <div className="mt-4 p-3 bg-red-100 rounded border border-red-200">
          <h4 className="font-medium text-red-800 mb-2">🔧 Fix Required</h4>
          
          {apiDetails.status === 401 ? (
            <div className="space-y-2 text-sm text-red-700">
              <p><strong>Issue:</strong> API key is invalid or expired</p>
              <p><strong>Solution:</strong></p>
              <ol className="list-decimal list-inside space-y-1 ml-4">
                <li>Go to <a href="https://openrouter.ai/keys" target="_blank" className="underline font-medium">https://openrouter.ai/keys</a></li>
                <li>Generate a new API key</li>
                <li>Update your <code className="bg-red-200 px-1 rounded">.env.local</code> file</li>
                <li>Restart your development server</li>
              </ol>
            </div>
          ) : (
            <div className="text-sm text-red-700">
              <p><strong>Error:</strong> {apiDetails.error || 'Unknown error'}</p>
              {apiDetails.details && (
                <p><strong>Details:</strong> {JSON.stringify(apiDetails.details)}</p>
              )}
            </div>
          )}
        </div>
      )}

      {apiStatus === 'working' && apiDetails && (
        <div className="mt-4 p-3 bg-green-100 rounded border border-green-200">
          <h4 className="font-medium text-green-800 mb-2">✨ API Working</h4>
          <div className="text-sm text-green-700 space-y-1">
            <p><strong>Model:</strong> {apiDetails.modelUsed}</p>
            <p><strong>Response:</strong> {apiDetails.response}</p>
            {apiDetails.usage && (
              <p><strong>Usage:</strong> {apiDetails.usage.prompt_tokens} prompt + {apiDetails.usage.completion_tokens} completion tokens</p>
            )}
          </div>
        </div>
      )}

      {apiStatus === 'checking' && (
        <div className="mt-4 p-3 bg-yellow-100 rounded border border-yellow-200">
          <div className="flex items-center text-yellow-700">
            <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-yellow-600 mr-2"></div>
            <span className="text-sm">Testing API connection...</span>
          </div>
        </div>
      )}
    </div>
  );
}

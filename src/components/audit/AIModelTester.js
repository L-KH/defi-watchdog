// AI Model Test Component\n'use client';\nimport { useState } from 'react';\n\nexport default function AIModelTester() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [results, setResults] = useState(null);\n  const [error, setError] = useState(null);\n\n  const testModels = async () => {\n    setIsLoading(true);\n    setError(null);\n    setResults(null);\n\n    try {\n      const response = await fetch('/api/test-ai-models');\n      \n      if (!response.ok) {\n        throw new Error(`Test failed: ${response.status}`);\n      }\n\n      const data = await response.json();\n      setResults(data);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"bg-gradient-to-br from-gray-50 to-blue-50 rounded-xl border border-gray-200 p-6 mb-8\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <div>\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-1\">üîß AI Model Diagnostics</h3>\n          <p className=\"text-sm text-gray-600\">Test if external AI models are working properly</p>\n        </div>\n        <button\n          onClick={testModels}\n          disabled={isLoading}\n          className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 disabled:bg-gray-400 text-white rounded-lg text-sm font-medium transition-colors\"\n        >\n          {isLoading ? (\n            <div className=\"flex items-center\">\n              <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n              Testing...\n            </div>\n          ) : (\n            'Test AI Models'\n          )}\n        </button>\n      </div>\n\n      {error && (\n        <div className=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-lg text-red-700 text-sm\">\n          <strong>Error:</strong> {error}\n        </div>\n      )}\n\n      {results && (\n        <div className=\"space-y-4\">\n          {/* Summary */}\n          <div className=\"grid grid-cols-3 gap-4\">\n            <div className=\"bg-white p-3 rounded-lg border\">\n              <div className=\"text-2xl font-bold text-blue-600\">{results.summary.working}</div>\n              <div className=\"text-sm text-gray-600\">Working Models</div>\n            </div>\n            <div className=\"bg-white p-3 rounded-lg border\">\n              <div className=\"text-2xl font-bold text-red-600\">{results.summary.failed}</div>\n              <div className=\"text-sm text-gray-600\">Failed Models</div>\n            </div>\n            <div className=\"bg-white p-3 rounded-lg border\">\n              <div className=\"text-2xl font-bold text-gray-600\">{results.summary.total}</div>\n              <div className=\"text-sm text-gray-600\">Total Models</div>\n            </div>\n          </div>\n\n          {/* Recommendation */}\n          <div className={`p-4 rounded-lg border ${\n            results.summary.working > 0 \n              ? 'bg-green-50 border-green-200 text-green-800'\n              : 'bg-red-50 border-red-200 text-red-800'\n          }`}>\n            <div className=\"font-medium mb-2\">\n              {results.summary.working > 0 ? '‚úÖ Good News!' : '‚ùå Issue Detected'}\n            </div>\n            <div className=\"text-sm\">{results.recommendation}</div>\n          </div>\n\n          {/* Working Models */}\n          {results.workingModels.length > 0 && (\n            <div className=\"bg-white p-4 rounded-lg border\">\n              <h4 className=\"font-medium text-green-800 mb-2\">‚úÖ Working Models:</h4>\n              <ul className=\"list-disc list-inside text-sm text-green-700 space-y-1\">\n                {results.workingModels.map((model, index) => (\n                  <li key={index}>{model}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n\n          {/* Failed Models */}\n          {results.failedModels.length > 0 && (\n            <div className=\"bg-white p-4 rounded-lg border\">\n              <h4 className=\"font-medium text-red-800 mb-2\">‚ùå Failed Models:</h4>\n              <div className=\"space-y-2\">\n                {results.failedModels.map((model, index) => (\n                  <div key={index} className=\"text-sm\">\n                    <div className=\"font-medium text-red-700\">{model.model}</div>\n                    <div className=\"text-red-600 text-xs ml-4\">{model.error}</div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* API Key Status */}\n          <div className=\"bg-white p-4 rounded-lg border\">\n            <h4 className=\"font-medium text-gray-800 mb-2\">üîë API Configuration:</h4>\n            <div className=\"text-sm text-gray-600\">\n              <div>API Key: {results.summary.apiKey}</div>\n              <div className=\"mt-1 text-xs\">\n                {results.summary.working > 0 \n                  ? '‚úÖ API key is working'\n                  : '‚ùå API key may be invalid or expired'\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {!results && !isLoading && (\n        <div className=\"text-center py-4 text-gray-500\">\n          Click \"Test AI Models\" to check if external AI services are working\n        </div>\n      )}\n    </div>\n  );\n}\n
// Debug component to help diagnose audit recovery issues
// File: src/components/debug/AuditDebugger.js

import React, { useState, useEffect } from 'react';

export default function AuditDebugger() {
  const [audits, setAudits] = useState([]);
  const [testTxHash, setTestTxHash] = useState('');
  const [searchResult, setSearchResult] = useState(null);

  useEffect(() => {
    loadAuditsFromStorage();
  }, []);

  const loadAuditsFromStorage = () => {
    if (typeof window === 'undefined' || !window.localStorage) {
      return;
    }

    const foundAudits = [];
    
    for (let i = 0; i < localStorage.length; i++) {
      const key = localStorage.key(i);
      if (key?.startsWith('audit_')) {
        try {
          const auditData = JSON.parse(localStorage.getItem(key));
          foundAudits.push({
            key,
            data: auditData,
            hasTxHash: !!auditData.txHash,
            hasAuditResult: !!auditData.auditResult,
            completed: !!auditData.completed
          });
        } catch (error) {
          foundAudits.push({
            key,
            error: error.message,
            data: null
          });
        }
      }
    }
    
    setAudits(foundAudits);
  };

  const testTxHashSearch = () => {
    if (!testTxHash.trim()) return;
    
    const result = audits.find(audit => 
      audit.data?.txHash === testTxHash || 
      audit.data?.transactionHash === testTxHash
    );
    
    setSearchResult(result || { notFound: true });
  };

  const clearAllAudits = () => {
    if (confirm('Are you sure you want to clear all audit data? This cannot be undone.')) {
      audits.forEach(audit => {
        localStorage.removeItem(audit.key);
      });
      loadAuditsFromStorage();
      setSearchResult(null);
    }
  };

  const exportAuditData = () => {
    const exportData = {
      timestamp: new Date().toISOString(),
      audits: audits.map(audit => ({
        key: audit.key,
        data: audit.data,
        error: audit.error
      }))
    };
    
    const blob = new Blob([JSON.stringify(exportData, null, 2)], { type: 'application/json' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `audit-debug-${Date.now()}.json`;
    a.click();
    URL.revokeObjectURL(url);
  };

  return (
    <div className="fixed top-4 left-4 max-w-md z-50 bg-white rounded-xl shadow-xl border border-gray-200 p-4">
      <div className="flex items-center justify-between mb-4">
        <h3 className="text-lg font-bold text-gray-900">🔧 Audit Debugger</h3>
        <button
          onClick={() => document.querySelector('[data-audit-debugger]')?.remove()}
          className="text-gray-400 hover:text-gray-600"
        >
          ✕
        </button>
      </div>

      {/* Audit Summary */}
      <div className="mb-4 p-3 bg-blue-50 rounded-lg">
        <div className="text-sm text-blue-800">
          <div>📊 <strong>Total Audits:</strong> {audits.length}</div>
          <div>✅ <strong>Completed:</strong> {audits.filter(a => a.data?.completed).length}</div>
          <div>🔗 <strong>With TxHash:</strong> {audits.filter(a => a.hasTxHash).length}</div>
          <div>📋 <strong>With Results:</strong> {audits.filter(a => a.hasAuditResult).length}</div>
        </div>
      </div>

      {/* Transaction Hash Test */}
      <div className="mb-4">
        <label className="block text-sm font-medium text-gray-700 mb-2">
          Test Transaction Hash Recovery:
        </label>
        <div className="flex gap-2">
          <input
            type="text"
            placeholder="Enter TX hash..."
            value={testTxHash}
            onChange={(e) => setTestTxHash(e.target.value)}
            className="flex-1 px-2 py-1 text-xs border border-gray-300 rounded"
          />
          <button
            onClick={testTxHashSearch}
            className="px-3 py-1 text-xs bg-blue-600 text-white rounded hover:bg-blue-700"
          >
            Search
          </button>
        </div>
        
        {searchResult && (
          <div className="mt-2 p-2 text-xs bg-gray-50 rounded">
            {searchResult.notFound ? (
              <div className="text-red-600">❌ No audit found with this TX hash</div>
            ) : (
              <div className="text-green-600">
                ✅ Found audit: {searchResult.key}
                <br />
                Completed: {searchResult.completed ? 'Yes' : 'No'}
                <br />
                Has Results: {searchResult.hasAuditResult ? 'Yes' : 'No'}
              </div>
            )}
          </div>
        )}
      </div>

      {/* Audit List */}
      <div className="mb-4 max-h-32 overflow-y-auto">
        <div className="text-sm font-medium text-gray-700 mb-2">Stored Audits:</div>
        {audits.length === 0 ? (
          <div className="text-xs text-gray-500 p-2 bg-gray-50 rounded">
            No audits found in localStorage
          </div>
        ) : (
          <div className="space-y-1">
            {audits.map((audit, index) => (
              <div key={index} className="text-xs p-2 bg-gray-50 rounded">
                <div className="font-mono text-gray-600">{audit.key}</div>
                {audit.error ? (
                  <div className="text-red-600">Error: {audit.error}</div>
                ) : (
                  <div className="text-gray-600">
                    TxHash: {audit.data?.txHash?.slice(0, 16) || 'None'}...
                    {audit.completed && <span className="ml-2 text-green-600">✓</span>}
                  </div>
                )}
              </div>
            ))}
          </div>
        )}
      </div>

      {/* Actions */}
      <div className="flex gap-2">
        <button
          onClick={exportAuditData}
          className="flex-1 px-3 py-2 text-xs bg-green-600 text-white rounded hover:bg-green-700"
        >
          📤 Export Data
        </button>
        <button
          onClick={loadAuditsFromStorage}
          className="flex-1 px-3 py-2 text-xs bg-blue-600 text-white rounded hover:bg-blue-700"
        >
          🔄 Refresh
        </button>
        <button
          onClick={clearAllAudits}
          className="flex-1 px-3 py-2 text-xs bg-red-600 text-white rounded hover:bg-red-700"
        >
          🗑️ Clear All
        </button>
      </div>

      {/* Instructions */}
      <div className="mt-4 pt-3 border-t border-gray-200 text-xs text-gray-600">
        <div className="font-medium mb-1">💡 How to use:</div>
        <div>1. Check if your audits are stored</div>
        <div>2. Test TX hash recovery</div>
        <div>3. Export data for debugging</div>
        <div>4. Clear all if needed to start fresh</div>
      </div>
    </div>
  );
}
